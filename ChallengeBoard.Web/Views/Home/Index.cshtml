@using ChallengeBoard.Web.Models
@using ChallengeBoard.Web.Models.Extensions
@using ChallengeBoard.Web.Models.ViewModels
@model BoardViewModel

@{
    int maxPoints = 0;
}

<header class="header">
    <div class="header__user">
        @Model.CurrentUser.Name
        @if (Model.IsAuthenticated) {
            <span class="header__user__signedin"></span>
        }

    </div>
    <strong class="header__score" id="intro-score">@Model.TotalPoints</strong>
    <div class="header__actions">
        <button class="header__actions__icon" id="leaderboard-toggle">
            <span class="icon icon-star"></span>
        </button>
        <button class="header__actions__icon" id="notifications-toggle">
            <span class="icon icon-bell"></span>
        </button>      
    </div>    
</header>



<div class="item intro" style="display:none;">

    
    
    <div id="ProgressBarContainer"></div>
 
    <div class="intro-awards">
        <span class="intro-award icon icon-health" aria-hidden="true"><span id="bonus-level-one" class="@(Model.TotalPoints >= 100 ? "fulfilled" : string.Empty) card-icon-ring"></span></span>
        <span class="intro-award icon icon-health" aria-hidden="true"><span id="bonus-level-two" class="@(Model.TotalPoints >= 400 ? "fulfilled" : string.Empty) card-icon-ring"></span></span>
        <span class="intro-award icon icon-health" aria-hidden="true"><span id="bonus-level-three" class="@(Model.TotalPoints >= 800 ? "fulfilled" : string.Empty) card-icon-ring"></span></span>
        <span class="intro-award icon icon-health" aria-hidden="true"><span id="bonus-level-four" class="@(Model.TotalPoints >= 1300 ? "fulfilled" : string.Empty) card-icon-ring"></span></span>
        <span class="intro-award icon icon-health" aria-hidden="true"><span id="bonus-level-five" class="@(Model.TotalPoints >= 2000 ? "fulfilled" : string.Empty) card-icon-ring"></span></span>
    </div>
</div>


  


<div class="cards" id="Cards">
        
    @foreach (var challenge in Model.Challenges) {
        
        {
            maxPoints += challenge.Points;
        }
        <div class="item card@(challenge.IsComplete(Model.CurrentUser) ? " card--complete" : string.Empty)@(challenge.Single ? " card--single" : string.Empty)" role="button" data-id="@challenge.Id" data-points="@challenge.Points">
            <div class="card-background"></div>
            <div class="card-body">
                <div class="card-icon">
                    <div class="card-icon-inner">
                        <span class="icon icon-health" aria-hidden="true"></span>
                        <span class="icon icon-check" aria-hidden="true"></span>                        
                    </div>
                    <span class="card-icon-ring"></span>
                </div>
                <strong class="card-heading">@challenge.Text</strong>
                @if (!challenge.Single) {
                    <strong class="card-count"><span class="card-count--subtr">-</span> <span class="card-count--number">@challenge.NumberOfCompletions(Model.CurrentUser)</span> <span class="card-count--add">+</span></strong>
                }
                <footer class="card-meta">@challenge.Points poäng</footer>
            </div>
        </div>
    }
    <div id="max-score">@maxPoints</div>
    
</div>

<div class="notifications hidden" id="history-feed">
    <ul>
        @if (Model.History.Any()) {
            foreach (FeedViewModel feed in Model.History) {
                <li>
                    <strong class="notifications__time">@feed.TimeStamp</strong>
                    <p class="notifications__text">@feed.Challenge</p>
                </li>
            }
        }
    </ul>
</div>

<footer style="display:none;">
    <div id="user-hide">@Model.CurrentUser.UserName</div>
</footer>